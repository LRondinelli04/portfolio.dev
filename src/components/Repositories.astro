---
import GitHub from "./icons/GitHub.astro";
import LinkButton from "./LinkButton.astro";

const MAIN_REPOS = [
  {
    title: "Licenciatura en Sistemas - APU",
    description:
      "Repositorio de prácticas y proyectos de programación desarrollados en el marco de la Licenciatura en Sistemas y APU en la Facultad de Informática - UNLP.",
    github: "https://github.com/LRondinelli04/Licenciatura-en-Sistemas_APU",
  },
  {
    title: "Desarrollo Web",
    description:
      "Repositorio de prácticas y proyectos de programación desarrollados en el marco de la carrera de Desarrollador Front End ofrecida por EducacionIT.",
    github: "https://github.com/LRondinelli04/Desarrollo_Web",
  },
  {
    title: "Fiscalia de Estado",
    description:
      "Repositorio que recopila los trabajos durante la pasantía en la Fiscalía de Estado.",
    github: "https://github.com/LRondinelli04/Fiscalia-de-Estado",
  },
  {
    title: "Portfolio.dev",
    description: "Repositorio con del código fuente de mi portfolio personal.",
    github: "https://github.com/LRondinelli04/portfolio.dev",
  },
];
---

<section class="mt-16">
  <div id="controls-carousel" class="relative w-full" data-carousel="static">
    <!-- Carousel wrapper -->
    {
      MAIN_REPOS.map(({ title, description, github }, index) => (
        <div
          class={`hidden duration-700 ease-in-out ${index === 0 ? "block" : ""}`}
          data-carousel-item
        >
          <div class="repo-card p-4 border border-gray-200 dark:border-gray-700 rounded-lg shadow-md bg-white dark:bg-gray-800 flex flex-col justify-between">
            <div>
              <h3 class="text-2xl font-bold text-gray-800 dark:text-gray-100 text-center">
                {title}
              </h3>
              <p class="my-2 text-gray-600 dark:text-gray-300 px-20">
                {description}
              </p>
            </div>
            <div class="flex justify-end mt-5">
              <a href={github} class="btn btn-primary mt-4">
                <LinkButton href={github}>
                  <GitHub class="size-6" />
                  Code
                </LinkButton>
              </a>
            </div>
          </div>
        </div>
      ))
    }
    <!-- Slider indicators -->
    <div
      class="absolute z-30 flex -translate-x-1/2 bottom-5 left-1/2 space-x-3 rtl:space-x-reverse"
    >
      {
        MAIN_REPOS.map((_, index) => (
          <button
            type="button"
            class="w-3 h-3 rounded-full"
            aria-current={index === 0 ? "true" : "false"}
            aria-label={`Slide ${index + 1}`}
            data-carousel-slide-to={index}
          />
        ))
      }
    </div>
    <!-- Slider controls -->
    <button
      type="button"
      class="absolute top-1/2 left-0 z-30 flex items-center justify-center px-4 cursor-pointer group focus:outline-none transform -translate-y-1/2"
      data-carousel-prev
    >
      <span
        class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gray-400 dark:bg-white-800 dark:hover:bg-gray-100 group-hover:bg-gray-700 dark:group-hover:bg-white-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none transform transition-transform duration-300 hover:scale-110"
      >
        <svg
          class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 6 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M5 1 1 5l4 4"></path>
        </svg>
        <span class="sr-only">Previous</span>
      </span>
    </button>
    <button
      type="button"
      class="absolute top-1/2 right-0 z-30 flex items-center justify-center px-4 cursor-pointer group focus:outline-none transform -translate-y-1/2"
      data-carousel-next
    >
      <span
        class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-gray-400 dark:bg-white-800/30 dark:hover:bg-gray-100 group-hover:bg-gray-700 dark:group-hover:bg-white-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70 group-focus:outline-none transform transition-transform duration-300 hover:scale-110"
      >
        <svg
          class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 6 10"
        >
          <path
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="m1 9 4-4-4-4"></path>
        </svg>
        <span class="sr-only">Next</span>
      </span>
    </button>
  </div>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const items = document.querySelectorAll("[data-carousel-item]");
    const indicators = document.querySelectorAll("[data-carousel-slide-to]");
    let currentIndex = 0;

    function updateCarousel() {
      items.forEach((item, index) => {
        item.classList.toggle("block", index === currentIndex);
        item.classList.toggle("hidden", index !== currentIndex);
      });
      indicators.forEach((indicator, index) => {
        indicator.setAttribute(
          "aria-current",
          index === currentIndex ? "true" : "false"
        );
      });
    }

    const prevButton = document.querySelector("[data-carousel-prev]");
    if (prevButton) {
      prevButton.addEventListener("click", () => {
        currentIndex = currentIndex > 0 ? currentIndex - 1 : items.length - 1;
        updateCarousel();
      });
    }

    const nextButton = document.querySelector("[data-carousel-next]");
    if (nextButton) {
      nextButton.addEventListener("click", () => {
        currentIndex = currentIndex < items.length - 1 ? currentIndex + 1 : 0;
        updateCarousel();
      });
    }

    indicators.forEach((indicator, index) => {
      indicator.addEventListener("click", () => {
        currentIndex = index;
        updateCarousel();
      });
    });

    updateCarousel();
  });
</script>
